Request method:	POST
Request URI:	http://localhost:8080/eligibility/check
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Boris",
    "email": "Boris.Boris@gmail.com",
    "address": "SE15JX"
}
HTTP/1.1 200 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Fri, 30 Apr 2021 20:22:46 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "eligibleCards": [
        "C1"
    ]
}
Request method:	POST
Request URI:	http://localhost:8080/eligibility/check
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Angela",
    "email": "angela.angela@gmail.com",
    "address": "SE15JX"
}
HTTP/1.1 200 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Fri, 30 Apr 2021 20:22:46 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "eligibleCards": [
        "C1",
        "C2"
    ]
}
Request method:	POST
Request URI:	http://localhost:8080/eligibility/check
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Theresa",
    "email": "theresa.theresa@gmail.com",
    "address": "SE15JX"
}
HTTP/1.1 200 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Fri, 30 Apr 2021 20:22:46 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "eligibleCards": [
        "C2"
    ]
}
Request method:	POST
Request URI:	http://localhost:8080/eligibility/check
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "abc",
    "email": "theresa.theresa@gmail.com",
    "address": "SE15JX"
}
HTTP/1.1 200 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Fri, 30 Apr 2021 20:22:46 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "eligibleCards": [
        
    ]
}
Request method:	POST
Request URI:	http://localhost:8080/eligibility/check
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": null,
    "email": "Boris.Boris@gmail.com",
    "address": "SE15JX"
}
HTTP/1.1 400 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Fri, 30 Apr 2021 20:22:46 GMT
Connection: close

{
    "timestamp": "2021-04-30T20:22:47.148+0000",
    "status": 400,
    "error": "Bad Request",
    "errors": [
        {
            "codes": [
                "NotNull.applicant.name",
                "NotNull.name",
                "NotNull.java.lang.String",
                "NotNull"
            ],
            "arguments": [
                {
                    "codes": [
                        "applicant.name",
                        "name"
                    ],
                    "arguments": null,
                    "defaultMessage": "name",
                    "code": "name"
                }
            ],
            "defaultMessage": "must not be null",
            "objectName": "applicant",
            "field": "name",
            "rejectedValue": null,
            "bindingFailure": false,
            "code": "NotNull"
        }
    ],
    "message": "Validation failed for object='applicant'. Error count: 1",
    "path": "/eligibility/check"
}
Request method:	POST
Request URI:	http://localhost:8080/eligibility/check
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Angela",
    "email": null,
    "address": "SE15JX"
}
HTTP/1.1 400 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Fri, 30 Apr 2021 20:22:46 GMT
Connection: close

{
    "timestamp": "2021-04-30T20:22:47.167+0000",
    "status": 400,
    "error": "Bad Request",
    "errors": [
        {
            "codes": [
                "NotNull.applicant.email",
                "NotNull.email",
                "NotNull.java.lang.String",
                "NotNull"
            ],
            "arguments": [
                {
                    "codes": [
                        "applicant.email",
                        "email"
                    ],
                    "arguments": null,
                    "defaultMessage": "email",
                    "code": "email"
                }
            ],
            "defaultMessage": "must not be null",
            "objectName": "applicant",
            "field": "email",
            "rejectedValue": null,
            "bindingFailure": false,
            "code": "NotNull"
        }
    ],
    "message": "Validation failed for object='applicant'. Error count: 1",
    "path": "/eligibility/check"
}
Request method:	POST
Request URI:	http://localhost:8080/eligibility/check
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "name": "Theresa",
    "email": "theresa.theresa@gmail.com",
    "address": null
}
HTTP/1.1 400 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Fri, 30 Apr 2021 20:22:46 GMT
Connection: close

{
    "timestamp": "2021-04-30T20:22:47.184+0000",
    "status": 400,
    "error": "Bad Request",
    "errors": [
        {
            "codes": [
                "NotNull.applicant.address",
                "NotNull.address",
                "NotNull.java.lang.String",
                "NotNull"
            ],
            "arguments": [
                {
                    "codes": [
                        "applicant.address",
                        "address"
                    ],
                    "arguments": null,
                    "defaultMessage": "address",
                    "code": "address"
                }
            ],
            "defaultMessage": "must not be null",
            "objectName": "applicant",
            "field": "address",
            "rejectedValue": null,
            "bindingFailure": false,
            "code": "NotNull"
        }
    ],
    "message": "Validation failed for object='applicant'. Error count: 1",
    "path": "/eligibility/check"
}
